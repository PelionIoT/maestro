sysLogSocket: /dev/log
#unixLogSocket: /tmp/grease.socket
httpUnixSocket: /tmp/maestroapi.sock
linuxKernelLog: true
debug_opts:
    pid_file: /tmp/maestro.pid
    keep_pids: true
    pid_file_dates: true
processes:
    reaper_interval: 1500
# use the file system only reader. Use a specific path for the identity file
platform_readers:
  - platform: "fsonly"
    params:
      identityPath: "/userdata/identity.json"
#      identityPath: "/mnt/rawpart/ed/work/edge-gw-provisioning-tool/tools/provision_developer_identity/identity.json"
#linuxKernelLogLegacy: true # use this on kernel 3.5 and before
clientId: WWRL000001
sys_stats:
  vm_stats:
    every: "5s"
    name: vm
#  disk_stats:
#    every: "30s"
#    name: disk
#    ignore_partitions_regex:
#      - "\\/dev\\/nvme.*"
#    ignore_mountpoints_regex:
#      - "\\/snap.*"
static_file_generators:
  - name: "test_a_inline_template"
    output_file: "/tmp/somedir/test_inline.out"
    template: |
      Hey there
      DEVJS_ROOT={{DEVJS_ROOT}}
      ARCH_WW_PLATFORM={{ARCH_WW_PLATFORM}}  (this was from the "testplatform" platform reader)
      ARCH_PAIRING_CODE={{ARCH_PAIRING_CODE}} (and so was this!)
mdns:
  # disable: true
  static_records:
   - name: "Static"
     service: "_wwservices._tcp"  # normally something like https or ftp
     domain: "local"     # local is default
     port: 313
     text: [ "wwid={{RELAYID}}", "another=item" ]
     hostname: "{{RELAYID}}"
   - name: "MaestroStaticRecordTest2"
     service: "_wwservices._tcp"  # normally something like https or ftp
     # domain: "local"     # local is default
     interfaces: "eth1,wlan1"
     port: 313
     text:
      - "wwid={{RELAYID}}"
      - "another=line"
     hostname: "wigwaggateway"
watchdog:
  path: "/home/ed/work/gostuff/src/github.com/PelionIoT/rallypointwatchdogs/rp100/rp100wd.so"
  opt1: "/tmp/devOSkeepalive"
  opt2: "30"
time_server:
  host: "provisioning.mbedcloud.io"
  # don't actually set the time (so we don't jack stuff up on our laptop)
  pretend: true
  # check every 30 seconds (totally unnecessary, use the default
  # by just not setting this value - which is every 24 hours)
  #check_time_interval: 30
symphony:
# symphony system management APIs
    # defaults to 10:
    sys_stats_count_threshold: 10
    sys_stats_time_threshold: 60000
    client_cert: |
      -----BEGIN CERTIFICATE-----
      MIIE+DCCAuCgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBfMQswCQYDVQQGEwJVUzEO
      MAwGA1UECAwFVGV4YXMxDzANBgNVBAcMBkF1c3RpbjEvMC0GA1UEAwwmcmVsYXlz
      X3dpZ3dhZy5pb19yZWxheV9jYV9pbnRlcm1lZGlhdGUwHhcNMTgwMTEwMjM0MzEz
      WhcNMzgwMTA1MjM0MzEzWjBYMQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMx
      DzANBgNVBAcMBkF1c3RpbjETMBEGA1UECgwKV2lnV2FnIEluYzETMBEGA1UEAwwK
      V0RSTDAwMDAwMDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL2JtEkN
      971gX+W+0ufIah5REtf6hGZgpuT8oljuQDRPtgMSLukL1xrIS32iU85dhOn28QSh
      /ZnQNJWhkrpKfr7vRDqP/dxPpCXWZ3O0wP+9sFjs3W1IxWqsiA0p5EcjHCQwfpZi
      g2t1UeSIFiJ89Kl8Qzh+PEapypdJWApiqdWNpQ4EuGFmQfPmcf+cfjYDlstWHp3n
      vUkmopi6NMkkIxGrEeXPT6OExVzztNY1F79l+7ZMMCrRKVYxghlv2tcnm/7lC1UG
      cGQyzNHSUZ8vXFbdfMca6vtJGA13w4aLZsYQQIgKI98NQK8RqgxZkKjrMfPh8dVs
      wiBVim4RaN6ImrECAwEAAaOBxTCBwjAJBgNVHRMEAjAAMBEGCWCGSAGG+EIBAQQE
      AwIF4DAzBglghkgBhvhCAQ0EJhYkT3BlblNTTCBHZW5lcmF0ZWQgQ2xpZW50IENl
      cnRpZmljYXRlMB0GA1UdDgQWBBSUAOsF10D3jpPW8gpLwtxx1crjDzAfBgNVHSME
      GDAWgBROVW76dm5DiqKyKA1Js8Kk2F4cUzAOBgNVHQ8BAf8EBAMCBeAwHQYDVR0l
      BBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4ICAQCCmb/6
      ZJZDJE4s6GR625Ntl+9rUiRsf3JIsewctJpmC94N1xYiRZxcZsi/Gd+4dlEA09FX
      bhGIvaZ/Lbk8ZZ/eXUPT50VGSyfFchxCwRyyj/U2Ghuf/yc0nLSDGaxcY9A7aXdf
      FYlEjr+NcAXly4vFotR7WFibmN0TVVN+C/u4RE5q9XkHcNoGImJwGU0e6grTv+tY
      rPhbTvV9utKOSHOv2mGur+wefiiKcA8Ev48yr0Ye1lHIM+sJlUH/dJ9nKDPJ7d2x
      2IxNzZ6A1h17F6MXT8fqUMJm8qNxl/vS3DtHGm3m6va8lows+B+4rSAihrIQXClJ
      n3bdFX9vhunHcUdbpdqW0PO+QMqdOB3HArYqk65F63bjfLzABDO5MHx+Yq9lgv76
      9AQhk/+xrINg6G/fYBZjPHhkbPQnuOY6fBu4EW0RSbSmamSXZQJgJ7zC79WaJoRf
      JAbNDILboXEORE0xynaz9R5lHeDWulqdU9eBfIpTa0Wl3gxZ/FL7zjUHvXyWNV1t
      LNW3riSOFBziZtIhIxaTqqKlyuLF3SZiUCfj7jW9ki6+0U275N14Cymy80YuBPK/
      oAmZxR3xsSN2N9vEklDveZKluizuV6MIHNLZfYughN8Sm4qTWdnJLc+HmceRRMli
      WuXCo0DuWzyh45I7ZCiGFUH92D6pv2R08A06xA==
      -----END CERTIFICATE-----
    client_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEowIBAAKCAQEAvYm0SQ33vWBf5b7S58hqHlES1/qEZmCm5PyiWO5ANE+2AxIu
      6QvXGshLfaJTzl2E6fbxBKH9mdA0laGSukp+vu9EOo/93E+kJdZnc7TA/72wWOzd
      bUjFaqyIDSnkRyMcJDB+lmKDa3VR5IgWInz0qXxDOH48RqnKl0lYCmKp1Y2lDgS4
      YWZB8+Zx/5x+NgOWy1Yenee9SSaimLo0ySQjEasR5c9Po4TFXPO01jUXv2X7tkww
      KtEpVjGCGW/a1yeb/uULVQZwZDLM0dJRny9cVt18xxrq+0kYDXfDhotmxhBAiAoj
      3w1ArxGqDFmQqOsx8+Hx1WzCIFWKbhFo3oiasQIDAQABAoIBACdu9e5ZFJj26xy+
      hdypSsLB9VywB0nRhAeSNCiycPMxPloHN3FPAFLXJzWdRzhhJp0SvnRLS5rrwXT8
      J63Qf+wzlYtll9h1TV597AobqifLDFyD81GgWUpnWOr8Mz1Fpb41xLB/EH6T6xTT
      518HhlOYwdeIE/xTqQ2uub13Z4RBVpE+MAT7yPWbban/Rmym1qMNBIebWDvtWHTf
      7zRs0vcn4Ur9ls5ZOGEmT68MswbOv80Kl2VnEtC3auvx0O06LgCif4jH8CXrJ8bp
      Z1HF1AsuuRedSGL/TKIh/c4uQJevPDO5VYz0KAqP91iJaqmUit7/mz+O9BeMOGH1
      W1FfoVECgYEA+o62dWbovOiwl1gFoQGCsaDxTKVb7fjbMrQC/xmf6FXEZed6QQ2W
      loNnJdoof6tKOYLxmjr4hfaDqz0dTWRPh8w3TLi8mVwVrSw/xUG37Yio0ersJoQE
      JAZPdLzmPxGLS+9iuR4bodA1ZzJxAIOfFwhf0qMwqh4hkr2pexpTQvUCgYEAwaet
      UMs3zvRVurXEB4HLzYeZt8SKiT1NU4BMajFwwJBm3E31y52b5XgmKWKXmrKTTsZI
      AkBO18Kx9TaeDNGejB5kXiz/t331xshNnsLxm0ikrNgLi42PuRptiHsND7YswGu2
      /spzGDOEhrug5PQQmRkV5ZwMTHUGvUarO5NzO00CgYEA116GraG4mnD1IhIyPHQ8
      8AxkfbqBq6tGV23uSXKwRhg7ClEPgA17DIOEzT+ZoiwNUCQjIqxf5V7BTRbqMhTw
      W80JF7SPwM8rfsBTTG4x+EaIvm/Nb0n4+TJHaBPbYgjlkG8DkBW2ML/0t3DfO07o
      F/dFzpwhf4kI2MaYgM1fFmUCgYA4f2LhH2i4yC/6uOzoA8YhwF3obz67q1bT9apV
      kPcENxzLSTNcpC7HU7ZOfKUeTNsNMGvxvDFEYVjp4XVa6A0JdBR0JUy1i9oYlHeQ
      ye8TDq58fstfe31i04MBPmUhIFUODl7lFstdVCpl5HecVFhDUj5BLrWn2LyOm/94
      8hu8QQKBgFYvbvqDrxM7ZPqX/DxWpi/WFsxchdSSboxBRcfaPJw17dw3THvPawRO
      Wua5hOijEtavBJ7MjsulNT5dc5PXjS20Y2eMZME+CkwXfQcmu90OMHd9u/2NwKuQ
      DChYCcAIk+YdIAntm6ThMCHhZ4LTLXYUIY/rX39bYkqyMDM0KU3F
      -----END RSA PRIVATE KEY-----
    host: "devcloud-relays.wigwag.io"
    url_logs: "https://devcloud-relays.wigwag.io/relay-logs/logs"
    url_stats: "https://devcloud-relays.wigwag.io/relay-stats/stats_obj"

var_defs:
   - key: "RELAYID"
     value: "WRL000001"
   - key: "WIGWAG_DIR"
     value: "/wigwag"
   - key: "NODE_EXEC"
     value: "/bin/node"
   - key: "DEVJS_ROOT"
     value: "/wigwag"
stats:
    interval: 5 # frequency in seconds - default 300
    check_mem: true # default true
    check_mem_pace: 1  # means check every interval (default is 1 - every interval)
targets:
   - file: /tmp/maestro.log
#     rotate:
#         max_files: 10
#         max_file_size: 5000
#         max_total_size: 100000
#         rotate_on_start: true
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - levels: all
         format_pre: "PRE"
# JSON file
   - file: /tmp/json-maestro.log
     rotate:
         max_files: 10
         max_file_size: 10000
         max_total_size: 100000
         rotate_on_start: true
     delim: "],\n"
     format_time: "{\"time\":\"%ld:%d\"}, "
     format_level: "{\"level\":\"%s\"}, "
     format_tag: "{\"tag\":\"%s\"}, "
     format_origin: "{\"origin\":\"%s\"}, "
     format_pre_msg: "{ \"msg\":\""
     format_post: "\"}"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }
#         format_post: "]}"  # I am not sure if this works
   - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
     format_time: "\"timestamp\":%ld%03d, "
     format_level: "\"level\":\"%s\", "
     format_tag: "\"tag\":\"%s\", "
     format_origin: "\"origin\":\"%s\", "
     format_pre_msg: "\"text\":\""
     format_post: "\"},"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
container_templates:
   - name: "deviceJS_process"
     cgroup:                 # will implement later
        mem_limit: 10000000
     inherit_env: true
     add_env:
        - "NODE_PATH=${WIGWAG_DIR}"
     exec_cmd: "node"        # will use PATH if not absolute path (as per execvp())
     exec_pre_args:
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
        - "deviceJSContainer"
#     exec_post_args:
   - name: "node_process"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "node"        # {{CMD}} will be filled in by the exec_cmd field below
     exec_pre_args:
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     exec_post_args:
        - "whatev"
     uses_ok_string: true
   - name: "node_process2"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "node"
     exec_pre_args:
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     exec_post_args:
        - "whatev2"
jobs:
   - job: "test_ok_string"
     restart: true
     exec_cmd: "{{cwd}}/auxtests/test-node-wait10s.js"
     container_template: "node_process"
   - job: "test_ok_string2"
     restart: true
     restart_limit: 2
     restart_pause: 2000
     exec_cmd: "{{cwd}}/auxtests/test-node.js"
     container_template: "node_process2"
     depends_on:
        - "test_ok_string"
   - job: "test_ok_string_message"
     restart: true
     exec_cmd: "{{cwd}}/auxtests/test-node-read-stdin.js"
     container_template: "node_process2"
     message: "MAGIC-START"

       # - job: "test_ok_string_exit"
   #   exec_cmd: "{{cwd}}/auxtests/test-node-exit.js"
   #   container_template: "node_process"



#    - job: "devicejs"
#      exec_cmd: "node {{CMD}}"        # {{CMD}} will be filled in by the exec_cmd field below
#      exec_args:
#         - "--max-executable-size=96"
#         - "--max-old-space-size=128"
#         - "--max-semi-space-size=1"
#         - "devicejs"
#    - job: "core_modules"
#      container_template: "deviceJS_process"
#      message: |
#                 "path" : "${thisdir}/../AppServer",
#                 "config": {}
#                 },
#                 {
#                 "path" : "${thisdir}/../APIProxy",
#                 "config": {}
#                 },
#                 {
#                     "path" : "${thisdir}/../core-lighting",
#                     "config": {}
#                 }
# #                {
# #                    "path" : "${thisdir}/../UPnP",
# #                    "config": {}
# #                },
#      restart: true
#      restart_limit: 5000
#      restart_pause: 100     # 100 seconds between restarts
#    - job: "support_tunnel"
#      depends_on:            # these services must be running first
#         - "devicejs"
#      #    - "core_modules"
#      restart_on_dependency_fail: true  # kill the process and restart it if it's dependencies fail
#      no_autostart: false       # don't start it when maestro starts. But the job is available for start
#      container_template: "node_process"
#      exec_cmd: "/wigwag/support.js"
#      exec_args:
#         - "some arg"
#
#   - tty: sometty
config_end: true