name: Build
on: push

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: edge-proxy-'${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  go-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.14.4'
      - name: Set GitHub access token via git config
        run: | 
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github".insteadOf "https://github"
      - run: git clone git@github.com:PelionIoT/scripts-internal.git
      - name: Build all
        run:  scripts-internal/golang/go_build_script.sh --all

#  go-test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#      - name: Set up golang
#        uses: actions/setup-go@v3
#        with:
#          go-version: '1.14.4'
#      - name: Set GitHub access token via git config
#        run: | 
#          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf "git@github.com:"
#          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github".insteadOf "https://github"
#      - run: git clone git@github.com:PelionIoT/scripts-internal.git
#      - name: Go test --all
#        run:  scripts-internal/golang/go-test-script.sh --all

  go-vet:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Set GitHub access token via git config
        run: | 
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github".insteadOf "https://github"
      - run: git clone git@github.com:PelionIoT/scripts-internal.git
      - run: ls -al
      - name: Run go vet (findings may not increase)
        run: scripts-internal/ci/more-lines-checker.sh ${{ github.event.repository.default_branch }} ${{ github.ref_name }} "scripts-internal/golang/go_vet_script.sh --all"

  golint-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: Set GitHub access token via git config
        run: | 
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github".insteadOf "https://github"
      - run: git clone git@github.com:PelionIoT/scripts-internal.git
      - run: ls -al
      - name: Run golint-checker (findings may not increase)
        run: scripts-internal/ci/more-lines-checker.sh ${{ github.event.repository.default_branch }} ${{ github.ref_name }} "scripts-internal/golang/golint_script.sh --all"

  run-pysh-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      # Install pyshcheck tooling
      - run: sudo apt install pycodestyle pydocstyle black
      # git instead of rules to use access token
      - run: git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf "git@github.com:"
      - run: git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github".insteadOf "https://github"
      - run: git clone git@github.com:PelionIoT/scripts-internal.git
      #- run: git clone https://github.com/PelionIoT/scripts-internal.git
      - run: |
          echo "." >scripts-internal/.nopyshcheck
          scripts-internal/ci/more-lines-checker.sh ${{ github.event.repository.default_branch }} ${{ github.ref_name }} "scripts-internal/pysh-check/pysh-check.sh --workdir ."
